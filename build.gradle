buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }//ext란? build.gradle에서 사용하는 전역변수 선언
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }//spring-boot-gradle-plugin의 버전을 springBootVersion의 값으로 받음
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'//스프링부트의 의존성들을 관리해주는 플러그인

repositories {
    mavenCentral()
}

group 'com.jojoldu.book'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    annotationProcessor("org.projectlombok:lombok")
    implementation('org.projectlombok:lombok')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')//스프링부트용 Spring Data Jpa 추상화 라이브러리
    implementation('com.h2database:h2')//인메모리 관계형 데이터베이스
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}
//gradle version 에러의 경우에는 Gradle Wrapper를 이용하여 프로젝트 빌드환경 관리 가능
//다른 gradle version이 설치된 경우에도 문제없이 작동할 수 있어서 협업 시에 유익함
//